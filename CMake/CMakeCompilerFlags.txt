SET(MSVC_DISABLE_WARNINGS "4100;4251;4275" CACHE STRING "Disable specific warnings for MSVC")

SET(CMAKE_PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Output/Pdb)

ADD_DEFINITIONS(-D_UNICODE)
ADD_DEFINITIONS(-DUNICODE)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

IF(NOT ANDROID)
	IF(CMAKE_COMPILER_IS_GNUCXX)

		message("Set compiler options for GCC")
		message("Release CXX flags..." ${CMAKE_CXX_FLAGS_RELEASE})
		message("Debug CXX flags..." ${CMAKE_CXX_FLAGS_DEBUG})
		ADD_DEFINITIONS(-D_GLIBCXX_USE_CXX11_ABI=0)
		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99")		
		SET(CMAKE_POSITION_INDEPENDENT_CODE TRUE)
		set(CMAKE_C_COMPILER "gcc-8")
		set(CMAKE_CXX_COMPILER "g++-8")
		add_compile_options(-Wno-reorder -Wno-unknown-pragmas -fpermissive -Wno-enum-compare -std=gnu++17)
		
		set(CONFIG_TYPE "${CMAKE_CONFIGURATION_TYPES}")
		
		if(${CONFIG_TYPE} STREQUAL "Debug")
			add_compile_options(-g -DDEBUG)
		elseif(${CONFIG_TYPE} STREQUAL "Release")
			add_compile_options(-O3 -DNDEBUG)
		else()
			add_compile_options(-g -Os)
		endif()
		
		#SET(CMAKE_CXX_FLAGS_RELEASE "-DNDEBUG")
		#SET(CMAKE_C_FLAGS_RELEASE "-DNDEBUG")
		
		IF (RGP_FOR_SERVER_BUILD)
			SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -w")
		ENDIF()

		ADD_DEFINITIONS(-fPIC)
		#set(EXTRA_LIBRARIRES "-lstdc++fs" )	 
		link_libraries(stdc++fs)

		FIND_PACKAGE( OpenMP )

	if(OPENMP_FOUND)
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
	endif()

		
	ELSEIF(MSVC)
		ADD_DEFINITIONS(-MP -Zi -D_CRT_SECURE_NO_WARNINGS -D_VARIADIC_MAX=10)
		ADD_DEFINITIONS(-D_CRT_CATCH_LEAKS_)
		ADD_DEFINITIONS(-D_ENABLE_EXTENDED_ALIGNED_STORAGE)
		
		#SET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
		SET(CMAKE_SHARED_LINKER_FLAGS "-DEBUG")
		SET(CMAKE_EXE_LINKER_FLAGS "-DEBUG")
		
		STRING(REGEX REPLACE "/W[0-9]" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
		
		IF (RGP_FOR_SERVER_BUILD)
			SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W0")
		ELSE()
			SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W3")
		ENDIF()
		
		FOREACH(WARN_NUM ${MSVC_DISABLE_WARNINGS})
			SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd${WARN_NUM}")
		ENDFOREACH()
	ENDIF()
	set(CMAKE_C_FLAGS_RELWITHDEBINFO "${CMAKE_C_FLAGS_RELWITHDEBINFO} -D_DEBUG")
	set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -D_DEBUG")
	IF(MSVC)
		add_compile_options("$<$<CONFIG:RELWITHDEBINFO>:/MDd>")
	ENDIF()
ELSE()
	ADD_DEFINITIONS(-std=c++11 -g)
ENDIF()