MACRO(GET_COMPILED_NAME RESULT)

	cmake_policy(SET CMP0054 NEW)

	IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
		SET(COMPILED_NAME "CLANG") 
	ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
		SET(COMPILED_NAME "GCC") 
		STRING(REGEX MATCHALL "[0-9]+" GCC_VERSION_COMPONENTS ${CMAKE_CXX_COMPILER_VERSION})
		LIST(GET GCC_VERSION_COMPONENTS 0 GCC_MAJOR)
		LIST(GET GCC_VERSION_COMPONENTS 1 GCC_MINOR)
		SET(COMPILED_NAME "${COMPILED_NAME}_${GCC_MAJOR}.${GCC_MINOR}")
	ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
		SET(COMPILED_NAME "INTEL") 
	ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
		SET(COMPILED_NAME "MSVC") 
		IF (${MSVC_VERSION} EQUAL 1700)
			SET(COMPILED_NAME "${COMPILED_NAME}_2012")
		ELSEIF (${MSVC_VERSION} EQUAL 1800)
			SET(COMPILED_NAME "${COMPILED_NAME}_2013")
		ELSEIF (${MSVC_VERSION} EQUAL 1900)
			SET(COMPILED_NAME "${COMPILED_NAME}_2015")
		ENDIF()
	ENDIF()
	
	IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
		SET(COMPILED_NAME "${COMPILED_NAME}_x64")
	ELSE()
		SET(COMPILED_NAME "${COMPILED_NAME}_x86")
	ENDIF()
	
	SET(${RESULT} ${COMPILED_NAME})
ENDMACRO()

MACRO(GET_QT_PREFIX_PATH RESULT)
	IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
		IF (NOT QT64_LOCATION)
			SET(QT64_LOCATION $ENV{QT64_LOCATION})
		ENDIF()
		SET(${RESULT} ${QT64_LOCATION})
	ELSE()
		IF (NOT QT_LOCATION)
			SET(QT_LOCATION $ENV{QT_LOCATION})
		ENDIF()
		SET(${RESULT} ${QT_LOCATION})
	ENDIF()
ENDMACRO()

